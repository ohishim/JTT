// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// JTT_score
Rcpp::NumericVector JTT_score(const int q, const int m, const Eigen::MatrixXi& E, const Rcpp::List& Xy_, const Eigen::VectorXd& yPy, const Rcpp::List& M_, const double D0, const double alp);
RcppExport SEXP _JTT_JTT_score(SEXP qSEXP, SEXP mSEXP, SEXP ESEXP, SEXP Xy_SEXP, SEXP yPySEXP, SEXP M_SEXP, SEXP D0SEXP, SEXP alpSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const int >::type q(qSEXP);
    Rcpp::traits::input_parameter< const int >::type m(mSEXP);
    Rcpp::traits::input_parameter< const Eigen::MatrixXi& >::type E(ESEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type Xy_(Xy_SEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type yPy(yPySEXP);
    Rcpp::traits::input_parameter< const Rcpp::List& >::type M_(M_SEXP);
    Rcpp::traits::input_parameter< const double >::type D0(D0SEXP);
    Rcpp::traits::input_parameter< const double >::type alp(alpSEXP);
    rcpp_result_gen = Rcpp::wrap(JTT_score(q, m, E, Xy_, yPy, M_, D0, alp));
    return rcpp_result_gen;
END_RCPP
}
// chol_solve2
Eigen::VectorXd chol_solve2(const Eigen::MatrixXd& M, const Eigen::VectorXd& b);
RcppExport SEXP _JTT_chol_solve2(SEXP MSEXP, SEXP bSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Eigen::MatrixXd& >::type M(MSEXP);
    Rcpp::traits::input_parameter< const Eigen::VectorXd& >::type b(bSEXP);
    rcpp_result_gen = Rcpp::wrap(chol_solve2(M, b));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_JTT_JTT_score", (DL_FUNC) &_JTT_JTT_score, 8},
    {"_JTT_chol_solve2", (DL_FUNC) &_JTT_chol_solve2, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_JTT(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
